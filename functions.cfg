#!/bin/bash
##
## Funciones del script de BASH para automatizar la instalación complementaria de mis Raspberry Pi 2
##
##

chck_rgx () { # Comprueba que el nombre suministrado para usuario o grupo cumpla con los requisitos. Los
              # parámetros son:
              #   * $1: tipo de comprobación de regex: hostname o username
              #   * $2: variable cuyo valor se quiere comprobar si cumple con los requisitos
              #   * $3: tipo de nombre: estático, transient, pretty, de usuario, de interfaz de red, etc.
  local rgx_net_if='^[a-z0-9]+$' ;
  local rgx_inputbox_net_if="El nombre $3 que ha introducido no es válido. Debe contener únicamente letras
                            minúsculas del alfabeto internacional y números, pero los números no al
                            comienzo. Vuelva a introducir el nombre." ;
  local rgx_hostname='^[a-z][a-zA-Z0-9_-]+$' ;
  local rgx_inputbox_hostname="El nombre $3 que ha introducido no es válido. Debe empezar por
                        minúscula y no contener números al comienzo; sólo podrá contener letras del
                        alfabeto internacional, números y los símbolos \"_\" y \"-\". Vuelva a introducir
                        el nombre." ;
  local rgx_username='^[a-z][a-z0-9_-]+$' ;
  local rgx_inputbox_username="El nombre $3 que ha introducido no es válido. Debe empezar por
                        minúscula y no contener números al comienzo; sólo podrá contener letras minúsculas
                        del alfabeto internacional, números y los símbolos \"_\" y \"-\". Vuelva a
                        introducir el nombre." ;
  declare rgx_name="rgx_$1" ;
  declare rgx_inputbox="rgx_inputbox_$1" ;
  name_ch=${!2}
  while [[ ! $name_ch =~ ${!rgx_name} ]] ; do
#  dialog  --separate-widget $'\n' --ok-label "Submit" \
#          --backtitle "$backtitle_var" \
#          --title     "Error en la introducción del nombre" \
#          --form      "$rgx_inputbox" 0 0 0 \
#            "Nombre $2 :"    1 5 ""    1 20  13  18  2> temp-file ;
    
    name_ch=$(dialog  --backtitle "$backtitle_var" \
                      --title     "Error en la introducción del nombre ${3}" --clear --trim \
                      --inputbox  "${!rgx_inputbox}" 0 0 3>&1 1>&2 2>&3) ;
  done
  declare -g -- "$2=$name_ch"
}

get_eth_orig () { # Averiguar el designador de la interfaz ethernet original de la RbPi2
  for i in $(seq 0 ${num_if_old0}) ; do
    local if_model=$(networkctl status ${if_old_arr[$i]} | awk '$1~/Model:/' | awk '{print $2}') ;
    local if_fabric=$(networkctl status ${if_old_arr[$i]} | awk '$1~/HW/&&$2~/Address:/' | awk '{print $3}' | grep -o -E '([[:xdigit:]]{1,2}:){3}') ;
    local if_type=$(networkctl status ${if_old_arr[$i]} | awk '$1~/Type:/' | awk '{print $2}') ;
    if [ "$if_model" == "SMSC9512/9514" ] && [ "$if_fabric" == "b8:27:eb:" ] && [ "$if_type" == "ether" ] ; then
        if_eth_orig="${if_old_arr[$i]}" ; # Ésta es la interfaz ethernet que trae la RbPi2
    fi
  done
}

